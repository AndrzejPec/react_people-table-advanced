{"version":3,"sources":["SearchParamsContext.tsx","components/HomePage.tsx","api.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/PageNotFound.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["SearchParamsContext","createContext","undefined","useSearchParamsContext","context","useContext","Error","SearchParamsProvider","children","useSearchParams","searchParams","setSearchParams","Provider","value","HomePage","className","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","CENTURIES","PeopleFilters","selectedCenturies","getAll","inputValue","get","href","type","placeholder","onChange","event","query","target","set","delete","URLSearchParams","toString","map","century","includes","onClick","currentCenturies","newCenturies","filter","c","forEach","append","handleCenturyFilterChange","length","newParams","Loader","PersonLink","person","existingPerson","people","find","p","name","to","slug","sex","PeopleTable","handleSort","sortState","useParams","sortField","sortOrder","style","cursor","born","died","motherName","fatherName","PeoplePage","navigate","useNavigate","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","sortedPeople","setSortedPeople","filteredByCentury","toLowerCase","Math","ceil","field","newOrder","currentField","currentOrder","useEffect","newPeople","sort","a","b","localeCompare","reverse","getPeople","data","catch","renderContent","PageNotFound","Navbar","role","isActive","classNames","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.19bff4d9.chunk.js","sourcesContent":["import { createContext, useContext, ReactNode } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\ninterface SearchParamsContextProps {\n  searchParams: URLSearchParams;\n  setSearchParams: (params: URLSearchParams) => void;\n}\n\nconst SearchParamsContext = createContext<SearchParamsContextProps\n| undefined>(undefined);\n\nexport const useSearchParamsContext = () => {\n  const context = useContext(SearchParamsContext);\n\n  if (!context) {\n    throw new\n    Error('useSearchParamsContext must be used within a SearchParamsProvider');\n  }\n\n  return context;\n};\n\ninterface SearchParamsProviderProps {\n  children: ReactNode;\n}\n\nexport const SearchParamsProvider: React.FC<SearchParamsProviderProps> = ({\n  children,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  return (\n    <SearchParamsContext.Provider value={{ searchParams, setSearchParams }}>\n      {children}\n    </SearchParamsContext.Provider>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useSearchParamsContext } from '../SearchParamsContext';\n\nconst CENTURIES = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters = () => {\n  const { searchParams, setSearchParams } = useSearchParamsContext();\n\n  const selectedCenturies = searchParams.getAll('centuries');\n  const inputValue = searchParams.get('query') || '';\n\n  const handleNameFilterChange = (event: React.ChangeEvent<\n  HTMLInputElement\n  >) => {\n    const query = event.target.value;\n\n    if (query) {\n      searchParams.set('query', query);\n    } else {\n      searchParams.delete('query');\n    }\n\n    setSearchParams(new URLSearchParams(searchParams.toString()));\n  };\n\n  const handleResetCenturyFilters = () => {\n    const query = searchParams.get('query');\n\n    searchParams.delete('centuries');\n\n    const newParams = new URLSearchParams(searchParams.toString());\n\n    if (query) {\n      newParams.set('query', query);\n    }\n\n    setSearchParams(newParams);\n  };\n\n  const handleCenturyFilterChange = (century: string) => {\n    const currentCenturies = searchParams.getAll('centuries');\n\n    if (currentCenturies.includes(century)) {\n      const newCenturies = currentCenturies.filter(c => c !== century);\n\n      searchParams.delete('centuries');\n      newCenturies.forEach(c => searchParams.append('centuries', c));\n    } else {\n      searchParams.append('centuries', century);\n    }\n\n    setSearchParams(new URLSearchParams(searchParams.toString()));\n  };\n\n  const handleResetFilters = () => {\n    setSearchParams(new URLSearchParams());\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <a className=\"is-active\" href=\"#/people\">All</a>\n        <a className=\"\" href=\"#/people?sex=m\">Male</a>\n        <a className=\"\" href=\"#/people?sex=f\">Female</a>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={handleNameFilterChange}\n            value={inputValue}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES.map((century) => (\n              <button\n                key={century}\n                data-cy=\"century\"\n                type=\"button\"\n                className={`button mr-1 ${selectedCenturies.includes(century) ? 'is-info' : ''}`}\n                onClick={() => handleCenturyFilterChange(century)}\n              >\n                {century}\n              </button>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <button\n              data-cy=\"centuryALL\"\n              type=\"button\"\n              className={`button is-outlined ${selectedCenturies.length === 0 ? 'is-success' : 'is-success'}`}\n              onClick={handleResetCenturyFilters}\n            >\n              All\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n          onClick={handleResetFilters}\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport { PersonLinkProps } from '../types';\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({ person, people }) => {\n  const existingPerson = people.find(p => p.name === person);\n\n  return existingPerson ? (\n    <Link\n      to={`/people/${existingPerson.slug}`}\n      className={existingPerson.sex === 'f' ? 'has-text-danger' : ''}\n    >\n      {person}\n    </Link>\n  ) : (\n    <span>{person || '-'}</span>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\nexport const PeopleTable = ({\n  people,\n  handleSort,\n  sortState,\n}: {\n  people: Person[],\n  handleSort: (field: string) => void,\n  sortState: { sortField: string | null, sortOrder: string | null }\n}) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th onClick={() => handleSort('name')}>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <span className=\"icon\">\n                {/* eslint-disable-next-line no-nested-ternary */}\n                <i className={`fas fa-sort${sortState.sortField === 'name' ? (sortState.sortOrder === 'asc' ? '-up' : '-down') : ''}`} style={{ cursor: 'pointer' }} />\n              </span>\n            </span>\n          </th>\n\n          <th onClick={() => handleSort('sex')}>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <span className=\"icon\">\n                {/* eslint-disable-next-line no-nested-ternary */}\n                <i className={`fas fa-sort${sortState.sortField === 'sex' ? (sortState.sortOrder === 'asc' ? '-up' : '-down') : ''}`} style={{ cursor: 'pointer' }} />\n              </span>\n            </span>\n          </th>\n\n          <th onClick={() => handleSort('born')}>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <span className=\"icon\">\n                {/* eslint-disable-next-line no-nested-ternary */}\n                <i className={`fas fa-sort${sortState.sortField === 'born' ? (sortState.sortOrder === 'asc' ? '-up' : '-down') : ''}`} style={{ cursor: 'pointer' }} />\n              </span>\n            </span>\n          </th>\n\n          <th onClick={() => handleSort('died')}>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <span className=\"icon\">\n                {/* eslint-disable-next-line no-nested-ternary */}\n                <i className={`fas fa-sort${sortState.sortField === 'died' ? (sortState.sortOrder === 'asc' ? '-up' : '-down') : ''}`} style={{ cursor: 'pointer' }} />\n              </span>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person: Person) => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={slug === person.slug ? 'has-background-warning' : ''}\n          >\n            <td>\n              <PersonLink person={person.name} people={people} />\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              <PersonLink person={person.motherName || ''} people={people} />\n            </td>\n            <td>\n              <PersonLink person={person.fatherName || ''} people={people} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { useSearchParamsContext } from '../SearchParamsContext';\n\nexport const PeoplePage = () => {\n  const { searchParams } = useSearchParamsContext();\n  const navigate = useNavigate();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const [sortedPeople, setSortedPeople] = useState<Person[]>([]);\n\n  const query = searchParams.get('query') || '';\n  const selectedCenturies = searchParams.getAll('centuries');\n\n  const filteredPeople = people.filter(person => {\n    if (query) {\n      return person.name.toLowerCase().includes(query.toLowerCase())\n        || person.motherName?.toLowerCase().includes(query.toLowerCase())\n        || person.fatherName?.toLowerCase().includes(query.toLowerCase());\n    }\n\n    return true;\n  });\n\n  const filteredByCentury = filteredPeople.filter(person => {\n    if (selectedCenturies.length > 0) {\n      const century = Math.ceil(person.died / 100);\n\n      return selectedCenturies.includes(century.toString());\n    }\n\n    return true;\n  });\n\n  const handleSort = (field: string) => {\n    let newOrder = 'asc';\n    const currentField = searchParams.get('sort');\n    const currentOrder = searchParams.get('order');\n\n    if (currentField === field) {\n      if (currentOrder === 'asc') {\n        newOrder = 'desc';\n      } else if (currentOrder === 'desc') {\n        searchParams.delete('sort');\n        searchParams.delete('order');\n        navigate(`/people?${searchParams.toString()}`);\n\n        return;\n      }\n    }\n\n    searchParams.set('sort', field);\n    searchParams.set('order', newOrder);\n    navigate(`/people?${searchParams.toString()}`);\n  };\n\n  useEffect(() => {\n    const newPeople = [...filteredByCentury];\n    const sortField = searchParams.get('sort');\n    const sortOrder = searchParams.get('order');\n\n    if (sortField && sortOrder) {\n      newPeople.sort((a, b) => {\n        if (typeof a[sortField as keyof Person] === 'string'\n        && typeof b[sortField as keyof Person] === 'string') {\n          return (a[sortField as keyof Person] as string)\n            .localeCompare(b[sortField as keyof Person] as string);\n        }\n\n        if (typeof a[sortField as keyof Person] === 'number'\n        && typeof b[sortField as keyof Person] === 'number') {\n          return (a[sortField as keyof Person] as number)\n          - (b[sortField as keyof Person] as number);\n        }\n\n        return 0;\n      });\n\n      if (sortOrder === 'desc') {\n        newPeople.reverse();\n      }\n    }\n\n    setSortedPeople(newPeople);\n  }, [filteredByCentury, searchParams]);\n\n  useEffect(() => {\n    getPeople()\n      .then((data) => {\n        setPeople(data);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        setHasError(true);\n      });\n  }, []);\n\n  const renderContent = () => {\n    switch (true) {\n      case hasError:\n        return <p data-cy=\"peopleLoadingError\">Something went wrong</p>;\n\n      case isLoading:\n        return <Loader />;\n\n      case people.length === 0:\n        return (\n          <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n        );\n\n      default:\n        return (\n          <PeopleTable\n            people={sortedPeople}\n            handleSort={handleSort}\n            sortState={{\n              sortField: searchParams.get('sort'),\n              sortOrder: searchParams.get('order'),\n            }}\n          />\n        );\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {!isLoading && (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          )}\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {renderContent()}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\" element={<PeoplePage />} />\n            <Route path=\"/people/:slug\" element={<PeoplePage />} />\n            <Route path=\"/*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { SearchParamsProvider } from './SearchParamsContext';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <SearchParamsProvider>\n        <App />\n      </SearchParamsProvider>\n    </Router>,\n  );\n"],"sourceRoot":""}