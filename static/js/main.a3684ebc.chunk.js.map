{"version":3,"sources":["SearchParamsContext.tsx","components/HomePage.tsx","api.ts","components/SexFilter.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/PageNotFound.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["SearchParamsContext","createContext","undefined","useSearchParamsContext","context","useContext","Error","SearchParamsProvider","children","useSearchParams","searchParams","setSearchParams","Provider","value","HomePage","className","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","SexFilter","currentSelectedSex","get","handleSexFilterChange","newSelectedSex","currentParams","URLSearchParams","toString","delete","newParams","set","label","map","option","onClick","onKeyDown","CENTURIES","PeopleFilters","selectedCenturies","getAll","inputValue","type","placeholder","onChange","event","query","target","century","includes","currentCenturies","newCenturies","filter","c","forEach","append","handleCenturyFilterChange","length","href","Loader","PersonLink","person","people","navigate","useNavigate","existingPerson","find","p","name","to","slug","sex","preventDefault","newSearchParams","getSortIconClass","field","sortState","sortField","sortOrder","PeopleTable","handleSort","useParams","style","cursor","born","died","motherName","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","selectedSex","filteredPeople","toLowerCase","Math","ceil","newOrder","currentField","currentOrder","newURL","sortedPeople","firstPerson","sortFieldType","sort","a","b","aValue","bValue","localeCompare","reverse","useEffect","getPeople","data","catch","renderContent","PageNotFound","Navbar","role","isActive","classNames","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a3684ebc.chunk.js","sourcesContent":["import { createContext, useContext, ReactNode } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\ninterface SearchParamsContextProps {\n  searchParams: URLSearchParams;\n  setSearchParams: (params: URLSearchParams) => void;\n}\n\nconst SearchParamsContext = createContext<SearchParamsContextProps\n| undefined>(undefined);\n\nexport const useSearchParamsContext = () => {\n  const context = useContext(SearchParamsContext);\n\n  if (!context) {\n    throw new\n    Error('useSearchParamsContext must be used within a SearchParamsProvider');\n  }\n\n  return context;\n};\n\ninterface SearchParamsProviderProps {\n  children: ReactNode;\n}\n\nexport const SearchParamsProvider: React.FC<SearchParamsProviderProps> = ({\n  children,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  return (\n    <SearchParamsContext.Provider value={{ searchParams, setSearchParams }}>\n      {children}\n    </SearchParamsContext.Provider>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","/* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/anchor-is-valid */\n\nimport { useSearchParamsContext } from '../SearchParamsContext';\n\nexport const SexFilter = () => {\n  const { searchParams, setSearchParams } = useSearchParamsContext();\n  const currentSelectedSex = searchParams.get('sex') || 'all';\n\n  const handleSexFilterChange = (newSelectedSex: string) => {\n    const currentParams = new URLSearchParams(searchParams.toString());\n\n    currentParams.delete('sex');\n    const newParams = new URLSearchParams(currentParams.toString());\n\n    if (newSelectedSex !== 'all') {\n      newParams.set('sex', newSelectedSex);\n    }\n\n    setSearchParams(newParams);\n  };\n\n  const filterOptions = [\n    { label: 'All', value: 'all' },\n    { label: 'Male', value: 'm' },\n    { label: 'Female', value: 'f' },\n  ];\n\n  return (\n    <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n      {filterOptions.map((option) => (\n        <a\n          key={option.value}\n          className={currentSelectedSex === option.value ? 'is-active' : ''}\n          onClick={() => handleSexFilterChange(option.value)}\n          onKeyDown={() => handleSexFilterChange(option.value)}\n        >\n          {option.label}\n        </a>\n      ))}\n    </p>\n  );\n};\n","import { useSearchParamsContext } from '../SearchParamsContext';\nimport { SexFilter } from './SexFilter';\n\nconst CENTURIES = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters = () => {\n  const { searchParams, setSearchParams } = useSearchParamsContext();\n\n  const selectedCenturies = searchParams.getAll('centuries');\n  const inputValue = searchParams.get('query') || '';\n\n  const handleNameFilterChange = (event: React.ChangeEvent<\n  HTMLInputElement\n  >) => {\n    const query = event.target.value;\n\n    if (query) {\n      searchParams.set('query', query);\n    } else {\n      searchParams.delete('query');\n    }\n\n    setSearchParams(new URLSearchParams(searchParams.toString()));\n  };\n\n  const handleResetCenturyFilters = () => {\n    const query = searchParams.get('query');\n\n    searchParams.delete('centuries');\n\n    const newParams = new URLSearchParams(searchParams.toString());\n\n    if (query) {\n      newParams.set('query', query);\n    }\n\n    setSearchParams(newParams);\n  };\n\n  const handleCenturyFilterChange = (century: string) => {\n    const currentCenturies = searchParams.getAll('centuries');\n\n    if (currentCenturies.includes(century)) {\n      const newCenturies = currentCenturies.filter(c => c !== century);\n\n      searchParams.delete('centuries');\n      newCenturies.forEach(c => searchParams.append('centuries', c));\n    } else {\n      searchParams.append('centuries', century);\n    }\n\n    setSearchParams(new URLSearchParams(searchParams.toString()));\n  };\n\n  const handleResetFilters = () => {\n    setSearchParams(new URLSearchParams());\n  };\n\n  return (\n    <nav className=\"panel\">\n\n      <SexFilter />\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={handleNameFilterChange}\n            value={inputValue}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES.map((century) => (\n              <button\n                key={century}\n                data-cy=\"century\"\n                type=\"button\"\n                className={`button mr-1 ${selectedCenturies.includes(century) ? 'is-info' : ''}`}\n                onClick={() => handleCenturyFilterChange(century)}\n              >\n                {century}\n              </button>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <button\n              data-cy=\"centuryALL\"\n              type=\"button\"\n              className={`button is-outlined ${selectedCenturies.length === 0 ? 'is-success' : 'is-success'}`}\n              onClick={handleResetCenturyFilters}\n            >\n              All\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n          onClick={handleResetFilters}\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useNavigate } from 'react-router-dom';\nimport { PersonLinkProps } from '../types';\nimport { useSearchParamsContext } from '../SearchParamsContext';\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({ person, people }) => {\n  const navigate = useNavigate();\n  const existingPerson = people.find(p => p.name === person);\n  const { searchParams } = useSearchParamsContext();\n\n  const handlePersonClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    if (existingPerson) {\n      const newSearchParams = new URLSearchParams(searchParams.toString());\n\n      navigate(`/people/${existingPerson.slug}?${newSearchParams.toString()}`);\n    }\n  };\n\n  return existingPerson ? (\n    <Link\n      to={`/people/${existingPerson.slug}`}\n      className={existingPerson.sex === 'f' ? 'has-text-danger' : ''}\n      onClick={handlePersonClick}\n    >\n      {person}\n    </Link>\n  ) : (\n    <span>{person || '-'}</span>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\nconst getSortIconClass = (field: string, sortState: {\n  sortField: string | null,\n  sortOrder: string | null\n}) => {\n  if (sortState.sortField === field) {\n    return sortState.sortOrder === 'asc'\n      ? 'fas fa-sort-up'\n      : 'fas fa-sort-down';\n  }\n\n  return 'fas fa-sort';\n};\n\nexport const PeopleTable = ({\n  people,\n  handleSort,\n  sortState,\n}: {\n  people: Person[],\n  handleSort: (field: string) => void,\n  sortState: { sortField: string | null, sortOrder: string | null }\n}) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th onClick={() => handleSort('name')}>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <span className=\"icon\">\n                <i\n                  className={getSortIconClass('name', sortState)}\n                  style={{ cursor: 'pointer' }}\n                />\n              </span>\n            </span>\n          </th>\n\n          <th onClick={() => handleSort('sex')}>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <span className=\"icon\">\n                <i\n                  className={getSortIconClass('sex', sortState)}\n                  style={{ cursor: 'pointer' }}\n                />\n              </span>\n            </span>\n          </th>\n\n          <th onClick={() => handleSort('born')}>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <span className=\"icon\">\n                <i\n                  className={getSortIconClass('born', sortState)}\n                  style={{ cursor: 'pointer' }}\n                />\n              </span>\n            </span>\n          </th>\n\n          <th onClick={() => handleSort('died')}>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <span className=\"icon\">\n                <i\n                  className={getSortIconClass('died', sortState)}\n                  style={{ cursor: 'pointer' }}\n                />\n              </span>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person: Person) => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={slug === person.slug ? 'has-background-warning' : ''}\n          >\n            <td>\n              <PersonLink person={person.name} people={people} />\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              <PersonLink person={person.motherName || ''} people={people} />\n            </td>\n            <td>\n              <PersonLink person={person.fatherName || ''} people={people} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { useSearchParamsContext } from '../SearchParamsContext';\n\nexport const PeoplePage = () => {\n  const { searchParams } = useSearchParamsContext();\n  const navigate = useNavigate();\n  const { slug } = useParams();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const query = searchParams.get('query') || '';\n  const selectedCenturies = searchParams.getAll('centuries');\n  const selectedSex = searchParams.get('sex');\n\n  const filteredByQuery = people.filter(person => {\n    if (query) {\n      return person.name.toLowerCase().includes(query.toLowerCase())\n        || person.motherName?.toLowerCase().includes(query.toLowerCase())\n        || person.fatherName?.toLowerCase().includes(query.toLowerCase());\n    }\n\n    return true;\n  });\n\n  const filteredByCentury = filteredByQuery.filter(person => {\n    if (selectedCenturies.length > 0) {\n      const century = Math.ceil(person.died / 100);\n\n      return selectedCenturies.includes(century.toString());\n    }\n\n    return true;\n  });\n\n  const filteredPeople = filteredByCentury.filter(person => {\n    if (selectedSex) {\n      return person.sex === selectedSex;\n    }\n\n    return true;\n  });\n\n  const handleSort = (field: string) => {\n    let newOrder = 'asc';\n    const currentField = searchParams.get('sort');\n    const currentOrder = searchParams.get('order');\n    const newSearchParams = new URLSearchParams(searchParams.toString());\n\n    if (currentField === field) {\n      if (currentOrder === 'asc') {\n        newOrder = 'desc';\n      } else if (currentOrder === 'desc') {\n        newSearchParams.delete('sort');\n        newSearchParams.delete('order');\n        navigate(`/people?${newSearchParams.toString()}`);\n\n        return;\n      }\n    }\n\n    newSearchParams.set('sort', field);\n    newSearchParams.set('order', newOrder);\n\n    let newURL = `/people?${newSearchParams.toString()}`;\n\n    if (slug) {\n      newURL = `/people/${slug}?${newSearchParams.toString()}`;\n    }\n\n    navigate(newURL);\n  };\n\n  const sortedPeople = [...filteredPeople];\n  const sortField = searchParams.get('sort');\n  const sortOrder = searchParams.get('order');\n\n  if (sortField && sortOrder) {\n    const firstPerson = sortedPeople[0];\n    const sortFieldType = typeof firstPerson?.[sortField as keyof Person];\n\n    sortedPeople.sort((a, b) => {\n      const aValue = a[sortField as keyof Person];\n      const bValue = b[sortField as keyof Person];\n\n      if (sortFieldType === 'string') {\n        return (aValue as string).localeCompare(bValue as string);\n      }\n\n      if (sortFieldType === 'number') {\n        return (aValue as number) - (bValue as number);\n      }\n\n      return 0;\n    });\n\n    if (sortOrder === 'desc') {\n      sortedPeople.reverse();\n    }\n  }\n\n  useEffect(() => {\n    getPeople()\n      .then((data) => {\n        setPeople(data);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        setHasError(true);\n      });\n  }, []);\n\n  const renderContent = () => {\n    switch (true) {\n      case hasError:\n        return <p data-cy=\"peopleLoadingError\">Something went wrong</p>;\n\n      case isLoading:\n        return <Loader />;\n\n      case people.length === 0:\n        return (\n          <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n        );\n\n      case filteredPeople.length === 0:\n        return (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people matching the current search criteria\n          </p>\n        );\n\n      default:\n        return (\n          <PeopleTable\n            people={sortedPeople}\n            handleSort={handleSort}\n            sortState={{\n              sortField: searchParams.get('sort'),\n              sortOrder: searchParams.get('order'),\n            }}\n          />\n        );\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {!isLoading && (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          )}\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {renderContent()}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\" element={<PeoplePage />} />\n            <Route path=\"/people/:slug\" element={<PeoplePage />} />\n            <Route path=\"/*\" element={<PageNotFound />} />\n          </Routes>\n\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { SearchParamsProvider } from './SearchParamsContext';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <SearchParamsProvider>\n        <App />\n      </SearchParamsProvider>\n    </Router>,\n  );\n"],"sourceRoot":""}